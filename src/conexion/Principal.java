
package conexion;

import com.itextpdf.text.DocumentException;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author labtecweb06
 */
public class Principal extends javax.swing.JFrame {

    DefaultTableModel producto = new DefaultTableModel();
    ImprimirTicket ticket= new ImprimirTicket();
    public java.sql.Connection cp = null;
    String query= "select * from productos";
    Object[] ob=new Object[8];
    int id=0;
    public Principal() {
        initComponents();
        producto = (DefaultTableModel) tblProducto.getModel();
        cp = new conexion.Conectar().conectaBD();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProducto = new javax.swing.JTable();
        btnConsultar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "codigo", "name", "cant", "precio"
            }
        ));
        jScrollPane1.setViewportView(tblProducto);

        btnConsultar.setText("CONSULTAR");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });
        btnConsultar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                btnConsultarKeyTyped(evt);
            }
        });

        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnImprimir.setText("IMPRIMIR");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        jLabel1.setText("Prueba impresion");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(btnConsultar)
                                .addGap(95, 95, 95)
                                .addComponent(btnAgregar)
                                .addGap(106, 106, 106)
                                .addComponent(btnImprimir))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(292, 292, 292)
                                .addComponent(jLabel1)))
                        .addGap(0, 110, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConsultar)
                    .addComponent(btnAgregar)
                    .addComponent(btnImprimir))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
       limpiarT();
        consultarU(query);
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        ticket.imprimirTicket(tblProducto, "80", "178", "200", "22");
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        try {
            ticket.exportPDF();
        } catch (DocumentException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnConsultarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnConsultarKeyTyped
       // Este método se llama cuando una tecla se presiona
                if (evt.getKeyCode() == KeyEvent.VK_C) {
                    // Verificar si la tecla presionada es 'C'
                    btnConsultarActionPerformed(null); // Llamar al método asociado al botón Consultar
                } else if (evt.getKeyCode() == KeyEvent.VK_I) {
                    // Verificar si la tecla presionada es 'I'
                    btnImprimirActionPerformed(null); // Llamar al método asociado al botón Imprimir
                } else if (evt.getKeyCode() == KeyEvent.VK_A) {
                    // Verificar si la tecla presionada es 'A'
                    btnAgregarActionPerformed(null); // Llamar al método asociado al botón Agregar
                }
    }//GEN-LAST:event_btnConsultarKeyTyped

            public void keyPressed(KeyEvent e) {
                // Este método se llama cuando una tecla se presiona
                if (e.getKeyCode() == KeyEvent.VK_C) {
                    // Verificar si la tecla presionada es 'C'
                    btnConsultarActionPerformed(null); // Llamar al método asociado al botón Consultar
                } else if (e.getKeyCode() == KeyEvent.VK_I) {
                    // Verificar si la tecla presionada es 'I'
                    btnImprimirActionPerformed(null); // Llamar al método asociado al botón Imprimir
                } else if (e.getKeyCode() == KeyEvent.VK_A) {
                    // Verificar si la tecla presionada es 'A'
                    btnAgregarActionPerformed(null); // Llamar al método asociado al botón Agregar
                }
            }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProducto;
    // End of variables declaration//GEN-END:variables

public void consultarU(String query) {
        java.sql.ResultSet r = new conexion.Conectar().consulta(query);
        int i = 1;
        try {
            while (r.next()) {
               
                ob[0] = r.getInt("cod");
                ob[1] = r.getString("nombre");
                ob[2] =r.getInt("cant");
                ob[3] = r.getInt("precio");

                producto.addRow(ob);
              
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

    }

    public void limpiarT() {
        int a = producto.getRowCount();
        while (a != 0) {
            if (a != 0) {
                producto.removeRow(0);
            }
            a = producto.getRowCount();
        }
    }

    public boolean seleccionado() {
        if (tblProducto.getSelectedRow() != -1) {
            return true;
        } else {
            return false;
        }
    }

//    public void insertar() {
//        String insert = "insert into ofertas(folio,descrip) values(?,?)";
//
//        try {
//
//            PreparedStatement ps = new conexion.Conectar().conectaBD().prepareStatement(insert);
//
//            ps.setInt(1, Integer.parseInt(jTextField1.getText()));
//            ps.setString(2, jTextField2.getText());
//
//            ps.executeUpdate();
//            JOptionPane.showMessageDialog(null, "Los campos se insertaron correctamente!");
//            insertOfertas.setVisible(false);
//            limpiarT();
//            consultarU(query);
//        } catch (SQLException ex) {
//            System.out.println(ex.getMessage());
//        }
//    }



}
